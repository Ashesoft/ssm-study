<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 启动spring的一些 annotation 只扫描不装配 bean -->
    <!-- <context:annotation-config/> -->

    <!--  SpringMVC的配置文件，含网站跳转的逻辑控制，配置  -->
    <!-- <context:component-scan base-package="com.longrise.myssm" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan> -->
    <context:component-scan base-package="com.longrise.myssm" /> <!-- 开启注解并装配 -->

    <!-- ====================================================== JSP START ====================================================== -->
    <!-- springframework 默认使用 jsp, 而要使用 html 就需要引入第三方开发库来代替它如: freemaker, thymeleaf[推荐, springboot 经常使用] -->
    <!-- 配置视图解析器-->
    <!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
    <!-- jsp 视图 -->
    <!-- <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> -->
    <!--前缀-->
    <!-- <property name="prefix" value="/WEB-INF/views"/> -->
    <!--后缀-->
    <!-- <property name="suffix" value=".jsp"/> -->
    <!-- </bean> -->
    <!-- ====================================================== JSP END ====================================================== -->

    <!-- ====================================================== THYMELEAF START ====================================================== -->
    <!-- SpringResourceTemplateResolver会自动与Spring自己的资源解析基础架构集成, 因此强烈建议使用 -->
    <bean id="htmlResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".html" />
        <!-- HTML是默认值, 为清楚起见在此处添加 -->
        <property name="templateMode" value="HTML" />
        <!-- 默认情况下模板缓存为true. 如果需要，设置为false, 修改后将自动更新的模板 -->
        <property name="cacheable" value="true" />
    </bean>

    <!-- SpringTemplateEngine自动应用SpringStandardDialect并启用Spring自己的MessageSource消息解析机制 -->
    <bean id="htmlEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="htmlResolver" />
        <!-- 在大多数情况下, 使用Spring 4.2.4或更高版本启用SpringEL编译器可以加快执行速度, 
            但是在某些情况下（当一个模板中的表达式在不同的数据类型之间重用时）可能不兼容. 
            因此默认情况下此标志为 false 以确保向后安全兼容性 -->
        <property name="enableSpringELCompiler" value="true" />
    </bean>
    <!-- 解析器 -->
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="htmlEngine" />
        <property name="viewNames" value="*.html,*.xhtml" />
    </bean>
    <!-- ====================================================== THYMELEAF END ====================================================== -->

    <!--两个标准配置-->
    <!--将springmvc不能处理的请求交给tomcat-->
    <!--能支持springmvc更高级的一些功能，JS303校验，快捷的ajax...映射动态请求-->
    <mvc:default-servlet-handler />
    <!-- 开启springmvc注解支持 -->
    <mvc:annotation-driven />
</beans>